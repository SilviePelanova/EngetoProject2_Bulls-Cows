"""
projekt_2.py: druhÃ½ projekt do Engeto Online Python Akademie
author: Silvie Pelanova
email: silvie.pelanova@gmail.com
discord: silvie4181
"""

import random
import time
from datetime import timedelta

# constants
NUM_DIGITS = 4
MAX_GUESSES_FOR_AMAZING = 5
MAX_GUESSES_FOR_AVERAGE = 15
SEPARATOR = "-" * 47

# define function creating random 4 digit number which does not strat with 0 and digits are not repeating
def generate_guess_number():
    available_numbers = list(range(10))
    random_numbers = []
    for number in range(NUM_DIGITS):
        if number == 0:
            digit = random.choice([x for x in available_numbers if x != 0])
            available_numbers.remove(digit)
        else: 
            digit = random.choice(available_numbers)
            available_numbers.remove(digit)
        random_numbers.append(digit)
    return "".join(map(str, random_numbers))

# define function counting elapsed time
def count_elapsed_time(end_time, start_time):
    elapsed_time = round(end_time - start_time)
    converted_elapsed_time = timedelta(seconds=elapsed_time)
    return str(converted_elapsed_time).split(":")

# define function validating input number
def validate_input_number(input_number):
    if not input_number.isdigit():                                                              # is number
        return False, "Incorrect input, input must be a number"
    if input_number[0] == "0":                                                                  # is not equal 0
        return False, "Incorrect input, input must not start with 0"
    if len(input_number) != NUM_DIGITS:                                                         # is 4 digit
        return False, f"Incorrect input, input must be {NUM_DIGITS} digit number"
    if len(input_number) != len(set(input_number)):                                             # digits does not repeats
        return False, "Incorrect input, input must not have repeated digits"
    return True, ""

# main loop game
def play_game(start_counter_on=False):
    attempts = 0
    guess_number = generate_guess_number()
    print(guess_number)

    # welcome message
    print(f"Hi there! \n{SEPARATOR} \nI'have generated a random {NUM_DIGITS} digit number for you. \nLet's play a bulls and cows game!")
    print(SEPARATOR)
    print("Enter a number:")
    print(SEPARATOR)

    while True:
        # request to enter input number
        input_number = input(">>> ")
        
        # validate input number, if valid count number of attempts plus 1
        valid, message = validate_input_number(input_number)
        if not valid:
            print(message)
            continue
         
        attempts += 1   
        
        # start time counter on for first valid input only
        if start_counter_on == False:
            start_time = time.time()
            start_counter_on = True

        # count bulls/cows   
        bulls, cows = 0, 0
        for i in range(NUM_DIGITS):        
            if input_number[i] == guess_number[i]:
                bulls += 1
            elif input_number[i] in guess_number:
                cows += 1
        
        # input number = guess number count as valid attempt
        if bulls == NUM_DIGITS:
            attempts += 1    
                    
            # stop time counter
            end_time = time.time()       
            formated_elapsed_time = count_elapsed_time(end_time,start_time)

            # result print
            if attempts <= MAX_GUESSES_FOR_AMAZING:
                print(f"Correct, you've guessed the right number in {attempts} guess! {'es' if attempts != 1 else ''} \nThat's amazing!")
            elif attempts > MAX_GUESSES_FOR_AMAZING and attempts < MAX_GUESSES_FOR_AVERAGE:
                print(f"Correct, you've guessed the right number in {attempts} guesses! \nThat's average.")
            else:
                print(f"Correct, you've guessed the right number in {attempts} guesses! \nThat's not so good.")
            
            print(SEPARATOR)
            print(f"You have guessed the right number in {formated_elapsed_time[0]} h {formated_elapsed_time[1]} m {formated_elapsed_time[2]} s.")
            print(SEPARATOR)
            quit()

        # list bull/bulls and cow/cows based on numbers in variables cows/bulls
        print(f"{bulls} bull{'s' if bulls != 1 else ''} {cows} cow{'s' if cows != 1 else ''}")
        print(SEPARATOR)

if __name__ == "__main__":
    play_game()   
